global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'erp-staging'
    environment: 'staging'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: []
          # - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alerts/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'

  # Node.js application metrics
  - job_name: 'nodejs-app'
    static_configs:
      - targets: ['backend:3000']
        labels:
          service: 'erp-backend'
          module: 'api'
    metrics_path: '/metrics'
    scrape_interval: 10s

  # PostgreSQL metrics (using postgres_exporter)
  - job_name: 'postgresql'
    static_configs:
      - targets: ['postgres-exporter:9187']
        labels:
          service: 'postgresql'
          database: 'erp_staging'

  # Redis metrics (using redis_exporter)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
        labels:
          service: 'redis'
          cache: 'primary'

  # RabbitMQ metrics
  - job_name: 'rabbitmq'
    static_configs:
      - targets: ['rabbitmq:15672']
        labels:
          service: 'rabbitmq'
          queue: 'messages'
    metrics_path: '/api/metrics'

  # Elasticsearch metrics
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch:9200']
        labels:
          service: 'elasticsearch'
          cluster: 'erp-staging'
    metrics_path: '/_prometheus/metrics'

  # Nginx metrics (using nginx-prometheus-exporter)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
        labels:
          service: 'nginx'
          proxy: 'reverse'

  # Docker containers metrics (using cAdvisor)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
        labels:
          service: 'cadvisor'
          monitor: 'containers'

  # MinIO metrics
  - job_name: 'minio'
    bearer_token: 'YOUR_MINIO_TOKEN'
    metrics_path: /minio/v2/metrics/cluster
    scheme: http
    static_configs:
      - targets: ['minio:9000']
        labels:
          service: 'minio'
          storage: 'object'

# Remote storage configuration (optional)
# remote_write:
#   - url: "http://remote-storage:9090/api/v1/write"
#     write_relabel_configs:
#       - source_labels: [__name__]
#         regex: 'expensive_metric.*'
#         action: drop